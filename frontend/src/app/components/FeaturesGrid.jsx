"use client";
import { useEffect, useState, useRef } from "react";
import AOS from "aos";
import "aos/dist/aos.css";

const coreFeatures = [
  {
    icon: "üîê",
    title: "Felhaszn√°l√≥i bel√©ptet≈ë rendszer",
    desc: "Szerepk√∂r alap√∫ biztons√°gos hozz√°f√©r√©s tulajdonosoknak √©s b√©rl≈ëknek.",
    long_desc: "A Rentivo felhaszn√°l√≥i bel√©ptet≈ë rendszere lehet≈ëv√© teszi, hogy a tulajdonosok √©s b√©rl≈ëk biztons√°gosan hozz√°f√©rjenek az ingatlan adataihoz √©s funkci√≥ihoz. A szerepk√∂r alap√∫ hozz√°f√©r√©s biztos√≠tja, hogy minden felhaszn√°l√≥ csak a sz√°m√°ra relev√°ns inform√°ci√≥kat l√°ssa.",
  },
  {
    icon: "üè¢",
    title: "Ingatlan-kezel√©s",
    desc: "Lak√°slist√°k, lak√≥k √©s ingatlan adatok egy helyen, k√∂nnyed√©n.",
    long_desc: "A Rentivo ingatlan-kezel√©si funkci√≥ja lehet≈ëv√© teszi, hogy minden ingatlanod adatait egy helyen t√°rold √©s kezeld. K√∂nnyed√©n hozz√°adhatod a lak√°sokat, nyilv√°ntarthatod a b√©rl≈ëket √©s az ingatlanokkal kapcsolatos inform√°ci√≥kat.",
  },
  {
    icon: "üí∞",
    title: "P√©nz√ºgyek r√∂gz√≠t√©se/k√∂vet√©se",
    desc: "K√∂vesd a b√©rleti d√≠jakat, sz√°ml√°kat √©s egy√©b tranzakci√≥kat val√≥s id≈ëben.",
    long_desc: "A Rentivo p√©nz√ºgyi modulja lehet≈ëv√© teszi, hogy val√≥s id≈ëben k√∂vesd a b√©rleti d√≠jakat √©s egy√©b p√©nz√ºgyi tranzakci√≥kat. R√∂gz√≠theted a bej√∂v≈ë √©s kimen≈ë √∂sszegeket, √≠gy mindig naprak√©sz lehetsz az ingatlanod p√©nz√ºgyeivel kapcsolatban.",
  },
  {
    icon: "üìÑ",
    title: "Jelent√©sek",
    desc: "K√∂nnyed√©n √°tl√°that√≥ √©s lek√©rhet≈ë statisztik√°k √©s jelent√©sek az ingatlanokr√≥l, b√©rl≈ëkr≈ël √©s p√©nz√ºgyekr≈ël.",
    long_desc: "A Rentivo jelent√©sk√©sz√≠t≈ë funkci√≥ja lehet≈ëv√© teszi, hogy r√©szletes statisztik√°kat √©s jelent√©seket k√©sz√≠ts az ingatlanjaidr√≥l, b√©rl≈ëidr≈ël √©s p√©nz√ºgyeidr≈ël. K√∂nnyed√©n lek√©rheted a sz√ºks√©ges adatokat, √©s let√∂ltheted ≈ëket pdf form√°ban.",
  },
];

export default function CoreFeatures() {
  const [selectedFeature, setSelectedFeature] = useState(null);
  const popupRef = useRef(null);

  useEffect(() => {
    AOS.init({ duration: 700, once: true });
  }, []);

  // Close popup on outside click or Escape key
  useEffect(() => {
    const handleClickOutside = (e) => {
      if (popupRef.current && !popupRef.current.contains(e.target)) {
        setSelectedFeature(null);
      }
    };

    const handleEscape = (e) => {
      if (e.key === "Escape") {
        setSelectedFeature(null);
      }
    };

    if (selectedFeature) {
      document.addEventListener("mousedown", handleClickOutside);
      document.addEventListener("keydown", handleEscape);
    }

    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [selectedFeature]);

  return (
    <section id="features" className="bg-[#f5f5f5] text-gray-900 py-20 relative">
      <div className="max-w-7xl mx-auto px-4 text-center">
        <h2 className="text-3xl sm:text-4xl font-bold mb-4">F≈ë funkci√≥k</h2>
        <p className="text-gray-700 mb-12 max-w-2xl mx-auto">
          Eszk√∂z√∂k, amelyek seg√≠tenek az ingatlankezel√©sben √©s a b√©rl≈ëkkel val√≥ kapcsolattart√°sban.
        </p>

        <div className="grid grid-cols-1 sm:grid-cols-2 gap-8 text-left">
          {coreFeatures.map((feature, idx) => (
            <div
              key={idx}
              data-aos="fade-up"
              data-aos-delay={idx * 100}
              className="group bg-white rounded-xl shadow-md p-6 transform transition duration-300 hover:scale-[1.03] hover:shadow-xl flex flex-col sm:flex-row items-start gap-4 cursor-pointer"
              onClick={() => setSelectedFeature(feature)}
            >
              <div className="text-3xl transition-transform duration-300 group-hover:rotate-3">
                {feature.icon}
              </div>
              <div>
                <h3 className="font-semibold text-lg mb-1">{feature.title}</h3>
                <p className="text-sm text-gray-700">{feature.desc}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {selectedFeature && (
        <div className="absolute left-1/2 top-1/2 z-50 transform -translate-x-1/2 -translate-y-1/2">
          <div
            ref={popupRef}
            className="relative bg-white p-6 rounded-xl shadow-2xl max-w-md w-full border border-gray-200 animate-fadeIn"
          >
            <button
              className="absolute top-2 right-2 text-gray-500 hover:text-gray-700 text-xl"
              onClick={() => setSelectedFeature(null)}
              aria-label="Close"
            >
              √ó
            </button>
            <div className="text-4xl mb-2">{selectedFeature.icon}</div>
            <h3 className="text-xl font-bold mb-2">{selectedFeature.title}</h3>
            <p className="text-gray-700">{selectedFeature.long_desc}</p>
          </div>
        </div>
      )}
    </section>
  );
}
